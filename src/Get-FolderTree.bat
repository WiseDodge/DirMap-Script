@echo off
chcp 65001 >nul
powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "& {$PSDefaultParameterValues['Out-File:Encoding'] = 'UTF8'; function Get-DirectoryTree {param ([string]$Path, [int]$Level = 0, [string[]]$IndentationPrefixes = @()) $items = Get-ChildItem -Path $Path -Directory -Force | Sort-Object Name; $count = $items.Count; $i = 0; foreach ($item in $items) {$i++; $isLastItem = ($i -eq $count); if ($isLastItem) {$prefix = '└───'} else {$prefix = '├───'}; $indentation = ($IndentationPrefixes -join '') + $prefix; Write-Output ($indentation + $item.Name); $newPrefixes = @($IndentationPrefixes); if ($isLastItem) {$newPrefixes += '    '} else {$newPrefixes += '│   '}; Get-DirectoryTree -Path $item.FullName -Level ($Level + 1) -IndentationPrefixes $newPrefixes}}; do {$rootPath = Read-Host -Prompt 'Please enter the full path of the directory you want to scan (e.g., C:\Users\Username\Documents)'; if (-not (Test-Path -Path $rootPath -PathType Container)) {Write-Host ('Error: The path ' + $rootPath + ' is not a valid directory. Please try again.') -ForegroundColor Red}} while (-not (Test-Path -Path $rootPath -PathType Container)); Set-Content -Path 'directoryinROOT.txt' -Value '' -Encoding UTF8; Write-Output ($rootPath + '\') | Out-File -FilePath 'directoryinROOT.txt' -Encoding UTF8; Get-DirectoryTree -Path $rootPath | Out-File -FilePath 'directoryinROOT.txt' -Append -Encoding UTF8}"
pause
